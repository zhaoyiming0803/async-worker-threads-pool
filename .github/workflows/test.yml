name: test

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Please enter your github name'
        required: true
      email:
        description: 'Please enter your github email'
        required: true
      version:
        description: 'Please enter your release version'
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: node:12.14.0
    env: 
      PUBLISH_OPTS: ${{ github.ref_name == 'master' && '--verbose' || '--verbose --tag beta' }}
      ALIYUN_ACCESS_KEY: ${{ secrets.ALIYUN_ACCESS_KEY }}
      ALIYUN_ACCESS_KEY_SECRET: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}
      OSS_REGION_PROD: ${{ secrets.OSS_REGION_PROD }}
      CDN_OSS_PROD: ${{ secrets.CDN_OSS_PROD }}
      VERSION: ${{ github.event.inputs.version }}
      BRANCH: ${{ github.ref_name }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/

      - name: before scripts
        run: |
          echo "Current branch: ${{ github.ref_name }}"
          echo "Current publish version: ${{ env.VERSION }}"
          echo "Current user.name: ${{ github.event.inputs.name }}"
          echo "Current user.email: ${{ github.event.inputs.email }}"
      
      - name: set git config
        run: |
          git config --global user.email ${{ github.event.inputs.email }}
          git config --global user.name ${{ github.event.inputs.name }}
      
      # - name: get version from package.json
      #   id: version
      #   uses: ashley-taylor/read-json-property-action@v1.0
      #   with:
      #     path: ./package.json
      #     property: version
    
      - name: install packages
#         uses: actions/cache@v2
#         with:
#           path: build
#           key: ${{ github.ref_name }}
        run: |
          npm ci
      
      # - name: setup oss
      #   uses: yizhoumo/setup-ossutil@v1
      #   with: 
      #     ossutil-version: '1.7.0' # Optional, default to '1.7.0'
      #     endpoint: ${{ secrets.OSS_REGION_PROD }}
      #     access-key-id: ${{ secrets.ALIYUN_ACCESS_KEY }}
      #     access-key-secret: ${{ secrets.ALIYUN_ACCESS_KEY_SECRET }}

      # - name: upload oss
      #   run: |
      #     echo "Hello ${{ github.event.inputs.name }}，上传打包到 CDN"
      #     echo "VERSION: ${{ steps.version.outputs.value }}"
      #     ossutil cp -f -r build oss://$CDN_OSS_PROD/test/$VERSION/
      #   env:
      #     VERSION: ${{ steps.version.outputs.value }}

      - name: change version
        run: |
          npm run prepublish --publish_version=$VERSION

      # - name: git commit version
      #   shell: bash
      #   run: |
      #     git pull origin $BRANCH
      #     git add .
      #     git commit -m "v${{ env.VERSION }}"
      #     git push origin $BRANCH

      - name: publish
        run: |
          npm config set //registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN
          npm publish $PUBLISH_OPTS --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
      
      # - name: release
      #   uses: actions/github-script@v3
      #   with:
      #     script: |
      #       github.git.createRef({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         ref: "refs/tags/${{ env.VERSION }}",
      #         sha: context.sha
      #       })

# github action use docker image:
# https://stackoverflow.com/questions/57549439/how-do-i-use-docker-with-github-actions
